/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DegenDealsERC6551Account,
  DegenDealsERC6551AccountInterface,
} from "../../src/DegenDealsERC6551Account";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCreationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntryPoint",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "degenDeals",
        type: "address",
      },
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "NotGegenDeals",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "arbitrage",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "deal",
    outputs: [
      {
        internalType: "bool",
        name: "obligorDeal",
        type: "bool",
      },
      {
        internalType: "bool",
        name: "beneficiaryDeal",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dealId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "degenDeals",
    outputs: [
      {
        internalType: "contract IDegenDealsERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc6551Registry",
    outputs: [
      {
        internalType: "contract IDegenDealsERC6551Registry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "getUserOpSignatureHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "entryPoint_",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc6551Registry_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dealId_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "isValidExecutor",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "isValidSigner",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "resolve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferObligee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferObligor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611cca806100206000396000f3fe60806040526004361061016a5760003560e01c80636eda12f8116100d1578063bc197c811161008a578063e405618611610064578063e405618614610247578063e42b24ae14610421578063f23a6e6114610458578063fc0c546a1461048457600080fd5b8063bc197c81146103cb578063c19d93fb146103f7578063d087d2881461040c57600080fd5b80636eda12f8146103375780637993df6a146102475780637f76ad0314610357578063ac9fa90014610377578063b0d691fe14610397578063ba464048146103b557600080fd5b80631794bb3c116101235780631794bb3c1461028957806319822f7c146102a95780631c3c0ca2146102d75780634dc19de11461024757806351945447146102f7578063523e32601461031757600080fd5b806301ffc9a714610176578063056d5afe146101ab57806306b14fb4146101e3578063150b7a021461021c578063161430a4146102475780631626ba7e1461026957600080fd5b3661017157005b600080fd5b34801561018257600080fd5b50610196610191366004611409565b6104b9565b60405190151581526020015b60405180910390f35b3480156101b757600080fd5b506002546101cb906001600160a01b031681565b6040516001600160a01b0390911681526020016101a2565b3480156101ef57600080fd5b506102036101fe366004611448565b6104d9565b6040516001600160e01b031990911681526020016101a2565b34801561022857600080fd5b50610203610237366004611551565b630a85bd0160e11b949350505050565b34801561025357600080fd5b506102676102623660046115bc565b6104ff565b005b34801561027557600080fd5b50610203610284366004611640565b610547565b34801561029557600080fd5b506102676102a436600461168b565b610572565b3480156102b557600080fd5b506102c96102c43660046116cc565b610724565b6040519081526020016101a2565b3480156102e357600080fd5b506102c96102f236600461171f565b61073a565b61030a610305366004611769565b610746565b6040516101a29190611806565b34801561032357600080fd5b50610203610332366004611839565b610787565b34801561034357600080fd5b506102676103523660046115bc565b6107dc565b34801561036357600080fd5b506003546101cb906001600160a01b031681565b34801561038357600080fd5b506102676103923660046115bc565b610946565b3480156103a357600080fd5b506000546001600160a01b03166101cb565b3480156103c157600080fd5b506102c960045481565b3480156103d757600080fd5b506102036103e63660046118f3565b63bc197c8160e01b95945050505050565b34801561040357600080fd5b506102c9610aaa565b34801561041857600080fd5b506102c9610ab5565b34801561042d57600080fd5b5061044161043c3660046115bc565b610b33565b6040805192151583529015156020830152016101a2565b34801561046457600080fd5b506102036104733660046119a0565b63f23a6e6160e01b95945050505050565b34801561049057600080fd5b50600354600454604080514681526001600160a01b0390931660208401528201526060016101a2565b60006104c482610b83565b806104d357506104d382610bb8565b92915050565b60006104e482610bdd565b156104f757506301ac53ed60e21b919050565b506000919050565b6003546001600160a01b0316331461054457600354604051632699ee1960e21b81526001600160a01b0390911660048201523360248201526044015b60405180910390fd5b50565b6000610554848484610c99565b156105675750630b135d3f60e11b61056b565b5060005b9392505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156105b75750825b90506000826001600160401b031660011480156105d35750303b155b9050811580156105e1575080155b156105ff5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561062957845460ff60401b1916600160401b1785555b61063288610d3e565b600280546001600160a01b0319166001600160a01b03891690811790915560408051637f76ad0360e01b81529051637f76ad03916004808201926020929091908290030181865afa15801561068b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106af9190611a08565b600380546001600160a01b0319166001600160a01b03929092169190911790556004869055831561071a57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b600061072e610d87565b50600061056b82610de3565b600061056b8383610e30565b606061075133610bdd565b61076e5760405163ea8e4eb560e01b815260040160405180910390fd5b61077b8686868686610e64565b90505b95945050505050565b60006107c98484848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061102c92505050565b156105675750630291f19360e51b61056b565b6003546001600160a01b0316331461081c57600354604051632699ee1960e21b81526001600160a01b03909116600482015233602482015260440161053b565b600354600480546040516320bf56eb60e21b8152918201526000916001600160a01b0316906382fd5bac90602401600060405180830381865afa158015610867573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261088f9190810190611a99565b6060810151608082015161010083015192935090916108ba906001600160a01b038416903084611034565b600354600480546040516331a9108f60e11b8152918201526000916001600160a01b031690636352211e90602401602060405180830381865afa158015610905573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109299190611a08565b905061093f6001600160a01b03841682846110a1565b5050505050565b6003546001600160a01b0316331461098657600354604051632699ee1960e21b81526001600160a01b03909116600482015233602482015260440161053b565b600354600480546040516320bf56eb60e21b8152918201526000916001600160a01b0316906382fd5bac90602401600060405180830381865afa1580156109d1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526109f99190810190611a99565b6060810151600354600480546040516335b729b960e11b81529182015292935090916000916001600160a01b031690636b6e537290602401606060405180830381865afa158015610a4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a729190611bce565b509150610a8c90506001600160a01b038316333084611034565b602083015161093f6001600160a01b03841682846110a1565b905090565b6000610aa560015490565b600080546001600160a01b0316604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401602060405180830381865afa158015610b0f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa59190611bfc565b60035460009081906001600160a01b03163314610b7857600354604051632699ee1960e21b81526001600160a01b03909116600482015233602482015260440161053b565b506001928392509050565b60006001600160e01b03198216630271189760e51b14806104d357506301ffc9a760e01b6001600160e01b03198316146104d3565b60006001600160e01b03198216636faff5f160e01b14806104d357506104d3826110d7565b600354600480546040516331a9108f60e11b8152918201526000916001600160a01b0384811692911690636352211e90602401602060405180830381865afa158015610c2d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c519190611a08565b6001600160a01b031603610c6757506001919050565b816001600160a01b0316610c836000546001600160a01b031690565b6001600160a01b0316036104f757506001919050565b600354600480546040516331a9108f60e11b815291820152600091829182916001600160a01b031690636352211e90602401602060405180830381865afa158015610ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0c9190611a08565b9050806001600160a01b0316826001600160a01b031603610d325760019250505061056b565b50600195945050505050565b6001600160a01b038116610d6557604051632039d3c960e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610de15760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e7400000000604482015260640161053b565b565b801561054457604051600090339060001990849084818181858888f193505050503d806000811461093f576040519150601f19603f3d011682016040523d82523d6000602084013e61093f565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c812061056b565b606060ff8216610eb657610eaf868686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061110292505050565b905061077e565b60001960ff831601610f0257610eaf8685858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061117b92505050565b60011960ff831601610f8c57610f4e8585858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111f092505050565b604051602001610f76919060609190911b6bffffffffffffffffffffffff1916815260140190565b604051602081830303815290604052905061077e565b60021960ff831601611013576000610fa76020828688611c15565b610fb091611c3f565b9050366000610fc2866020818a611c15565b91509150610fd288848484611226565b604051602001610ffa919060609190911b6bffffffffffffffffffffffff1916815260140190565b604051602081830303815290604052935050505061077e565b604051631cc6a69960e11b815260040160405180910390fd5b600192915050565b6040516001600160a01b03848116602483015283811660448301526064820183905261109b9186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b03838183161783525050505061129f565b50505050565b6040516001600160a01b038381166024830152604482018390526110d291859182169063a9059cbb90606401611069565b505050565b60006110e282610b83565b806104d357506001600160e01b03198216635194544760e01b1492915050565b60606000846001600160a01b0316848460405161111f9190611c5d565b60006040518083038185875af1925050503d806000811461115c576040519150601f19603f3d011682016040523d82523d6000602084013e611161565b606091505b50925090508061117357815160208301fd5b509392505050565b60606000836001600160a01b0316836040516111979190611c5d565b600060405180830381855af49150503d80600081146111d2576040519150601f19603f3d011682016040523d82523d6000602084013e6111d7565b606091505b5092509050806111e957815160208301fd5b5092915050565b805160009082906020820185f091506001600160a01b0382166111e95760405163a28c247360e01b815260040160405180910390fd5b60008083838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825192935087929150506020830188f591506001600160a01b0382166112965760405163a28c247360e01b815260040160405180910390fd5b50949350505050565b60006112b46001600160a01b03841683611302565b905080516000141580156112d95750808060200190518101906112d79190611c79565b155b156110d257604051635274afe760e01b81526001600160a01b038416600482015260240161053b565b606061056b8383600084600080856001600160a01b031684866040516113289190611c5d565b60006040518083038185875af1925050503d8060008114611365576040519150601f19603f3d011682016040523d82523d6000602084013e61136a565b606091505b509150915061137a868383611384565b9695505050505050565b60608261139957611394826113e0565b61056b565b81511580156113b057506001600160a01b0384163b155b156113d957604051639996b31560e01b81526001600160a01b038516600482015260240161053b565b508061056b565b8051156113f05780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60006020828403121561141b57600080fd5b81356001600160e01b03198116811461056b57600080fd5b6001600160a01b038116811461054457600080fd5b60006020828403121561145a57600080fd5b813561056b81611433565b634e487b7160e01b600052604160045260246000fd5b6040516101a081016001600160401b038111828210171561149e5761149e611465565b60405290565b604051601f8201601f191681016001600160401b03811182821017156114cc576114cc611465565b604052919050565b60006001600160401b038211156114ed576114ed611465565b50601f01601f191660200190565b600082601f83011261150c57600080fd5b813561151f61151a826114d4565b6114a4565b81815284602083860101111561153457600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561156757600080fd5b843561157281611433565b9350602085013561158281611433565b92506040850135915060608501356001600160401b038111156115a457600080fd5b6115b0878288016114fb565b91505092959194509250565b6000602082840312156115ce57600080fd5b81356001600160401b038111156115e457600080fd5b6115f0848285016114fb565b949350505050565b60008083601f84011261160a57600080fd5b5081356001600160401b0381111561162157600080fd5b60208301915083602082850101111561163957600080fd5b9250929050565b60008060006040848603121561165557600080fd5b8335925060208401356001600160401b0381111561167257600080fd5b61167e868287016115f8565b9497909650939450505050565b6000806000606084860312156116a057600080fd5b83356116ab81611433565b925060208401356116bb81611433565b929592945050506040919091013590565b6000806000606084860312156116e157600080fd5b83356001600160401b038111156116f757600080fd5b8401610120818703121561170a57600080fd5b95602085013595506040909401359392505050565b6000806040838503121561173257600080fd5b82356001600160401b0381111561174857600080fd5b8301610160818603121561175b57600080fd5b946020939093013593505050565b60008060008060006080868803121561178157600080fd5b853561178c81611433565b94506020860135935060408601356001600160401b038111156117ae57600080fd5b6117ba888289016115f8565b909450925050606086013560ff811681146117d457600080fd5b809150509295509295909350565b60005b838110156117fd5781810151838201526020016117e5565b50506000910152565b60208152600082518060208401526118258160408501602087016117e2565b601f01601f19169190910160400192915050565b60008060006040848603121561184e57600080fd5b833561185981611433565b925060208401356001600160401b0381111561167257600080fd5b600082601f83011261188557600080fd5b813560206001600160401b038211156118a0576118a0611465565b8160051b6118af8282016114a4565b92835284810182019282810190878511156118c957600080fd5b83870192505b848310156118e8578235825291830191908301906118cf565b979650505050505050565b600080600080600060a0868803121561190b57600080fd5b853561191681611433565b9450602086013561192681611433565b935060408601356001600160401b038082111561194257600080fd5b61194e89838a01611874565b9450606088013591508082111561196457600080fd5b61197089838a01611874565b9350608088013591508082111561198657600080fd5b50611993888289016114fb565b9150509295509295909350565b600080600080600060a086880312156119b857600080fd5b85356119c381611433565b945060208601356119d381611433565b9350604086013592506060860135915060808601356001600160401b038111156119fc57600080fd5b611993888289016114fb565b600060208284031215611a1a57600080fd5b815161056b81611433565b8051611a3081611433565b919050565b600082601f830112611a4657600080fd5b8151611a5461151a826114d4565b818152846020838601011115611a6957600080fd5b6115f08260208301602087016117e2565b80518015158114611a3057600080fd5b805160098110611a3057600080fd5b600060208284031215611aab57600080fd5b81516001600160401b0380821115611ac257600080fd5b908301906101a08286031215611ad757600080fd5b611adf61147b565b611ae883611a25565b8152611af660208401611a25565b6020820152604083015182811115611b0d57600080fd5b611b1987828601611a35565b604083015250611b2b60608401611a25565b60608201526080830151608082015260a083015160a0820152611b5060c08401611a25565b60c082015260e083015160e08201526101009150611b6f828401611a25565b828201526101209150611b83828401611a7a565b828201526101409150611b97828401611a7a565b828201526101609150611bab828401611a25565b828201526101809150611bbf828401611a8a565b91810191909152949350505050565b600080600060608486031215611be357600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611c0e57600080fd5b5051919050565b60008085851115611c2557600080fd5b83861115611c3257600080fd5b5050820193919092039150565b803560208310156104d357600019602084900360031b1b1692915050565b60008251611c6f8184602087016117e2565b9190910192915050565b600060208284031215611c8b57600080fd5b61056b82611a7a56fea2646970667358221220bd5fd3a744f5042e9cd3607dbe3142126fee3ea4d3c0b850e0e88a38401d8a4e64736f6c63430008180033";

type DegenDealsERC6551AccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DegenDealsERC6551AccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DegenDealsERC6551Account__factory extends ContractFactory {
  constructor(...args: DegenDealsERC6551AccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DegenDealsERC6551Account & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DegenDealsERC6551Account__factory {
    return super.connect(runner) as DegenDealsERC6551Account__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DegenDealsERC6551AccountInterface {
    return new Interface(_abi) as DegenDealsERC6551AccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DegenDealsERC6551Account {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DegenDealsERC6551Account;
  }
}
