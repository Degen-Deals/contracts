/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  DegenDealsERC6551Account,
  DegenDealsERC6551AccountInterface,
} from "../../src/DegenDealsERC6551Account";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
    ],
    name: "AddressEmptyCode",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AddressInsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "ContractCreationFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "FailedInnerCall",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidEntryPoint",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidInitialization",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidOperation",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAuthorized",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "degenDeals",
        type: "address",
      },
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "NotGegenDeals",
    type: "error",
  },
  {
    inputs: [],
    name: "NotInitializing",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint64",
        name: "version",
        type: "uint64",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "deal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "dealId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "degenDeals",
    outputs: [
      {
        internalType: "contract IDegenDealsERC721",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "entryPoint",
    outputs: [
      {
        internalType: "contract IEntryPoint",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc6551Registry",
    outputs: [
      {
        internalType: "contract IDegenDealsERC6551Registry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "uint8",
        name: "operation",
        type: "uint8",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bytes",
        name: "result",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "fund",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "uint256",
            name: "callGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "verificationGasLimit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxFeePerGas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxPriorityFeePerGas",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct UserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
    ],
    name: "getUserOpSignatureHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "entryPoint_",
        type: "address",
      },
      {
        internalType: "address",
        name: "erc6551Registry_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "dealId_",
        type: "uint256",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "isValidExecutor",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "signer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "isValidSigner",
    outputs: [
      {
        internalType: "bytes4",
        name: "magicValue",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "pay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "state",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferObligee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "transferObligor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "sender",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "initCode",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
          {
            internalType: "bytes32",
            name: "accountGasLimits",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "preVerificationGas",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "gasFees",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "paymasterAndData",
            type: "bytes",
          },
          {
            internalType: "bytes",
            name: "signature",
            type: "bytes",
          },
        ],
        internalType: "struct PackedUserOperation",
        name: "userOp",
        type: "tuple",
      },
      {
        internalType: "bytes32",
        name: "userOpHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "missingAccountFunds",
        type: "uint256",
      },
    ],
    name: "validateUserOp",
    outputs: [
      {
        internalType: "uint256",
        name: "validationData",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611c15806100206000396000f3fe6080604052600436106101445760003560e01c80636eda12f8116100b6578063bc197c811161006f578063bc197c81146103a5578063c19d93fb146103d1578063d087d288146103e6578063e42b24ae146102b1578063f23a6e61146103fb578063fc0c546a1461042757600080fd5b80636eda12f8146103115780637993df6a146102b15780637f76ad0314610331578063ac9fa90014610351578063b0d691fe14610371578063ba4640481461038f57600080fd5b80631794bb3c116101085780631794bb3c1461024157806319822f7c146102635780631c3c0ca2146102915780634dc19de1146102b157806351945447146102d1578063523e3260146102f157600080fd5b806301ffc9a714610150578063056d5afe1461018557806306b14fb4146101bd578063150b7a02146101f65780631626ba7e1461022157600080fd5b3661014b57005b600080fd5b34801561015c57600080fd5b5061017061016b366004611354565b61045c565b60405190151581526020015b60405180910390f35b34801561019157600080fd5b506002546101a5906001600160a01b031681565b6040516001600160a01b03909116815260200161017c565b3480156101c957600080fd5b506101dd6101d8366004611393565b61047c565b6040516001600160e01b0319909116815260200161017c565b34801561020257600080fd5b506101dd61021136600461149c565b630a85bd0160e11b949350505050565b34801561022d57600080fd5b506101dd61023c36600461154f565b6104a2565b34801561024d57600080fd5b5061026161025c36600461159a565b6104cd565b005b34801561026f57600080fd5b5061028361027e3660046115db565b61067f565b60405190815260200161017c565b34801561029d57600080fd5b506102836102ac36600461162e565b610695565b3480156102bd57600080fd5b506102616102cc366004611678565b6106a1565b6102e46102df3660046116b4565b6106e9565b60405161017c9190611751565b3480156102fd57600080fd5b506101dd61030c366004611784565b61072a565b34801561031d57600080fd5b5061026161032c366004611678565b61077f565b34801561033d57600080fd5b506003546101a5906001600160a01b031681565b34801561035d57600080fd5b5061026161036c366004611678565b6108e1565b34801561037d57600080fd5b506000546001600160a01b03166101a5565b34801561039b57600080fd5b5061028360045481565b3480156103b157600080fd5b506101dd6103c036600461183e565b63bc197c8160e01b95945050505050565b3480156103dd57600080fd5b50610283610a45565b3480156103f257600080fd5b50610283610a50565b34801561040757600080fd5b506101dd6104163660046118eb565b63f23a6e6160e01b95945050505050565b34801561043357600080fd5b50600354600454604080514681526001600160a01b03909316602084015282015260600161017c565b600061046782610ace565b80610476575061047682610b03565b92915050565b600061048782610b28565b1561049a57506301ac53ed60e21b919050565b506000919050565b60006104af848484610be4565b156104c25750630b135d3f60e11b6104c6565b5060005b9392505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156105125750825b90506000826001600160401b0316600114801561052e5750303b155b90508115801561053c575080155b1561055a5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561058457845460ff60401b1916600160401b1785555b61058d88610c89565b600280546001600160a01b0319166001600160a01b03891690811790915560408051637f76ad0360e01b81529051637f76ad03916004808201926020929091908290030181865afa1580156105e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060a9190611953565b600380546001600160a01b0319166001600160a01b03929092169190911790556004869055831561067557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b6000610689610cd2565b5060006104c682610d2e565b60006104c68383610d7b565b6003546001600160a01b031633146106e657600354604051632699ee1960e21b81526001600160a01b0390911660048201523360248201526044015b60405180910390fd5b50565b60606106f433610b28565b6107115760405163ea8e4eb560e01b815260040160405180910390fd5b61071e8686868686610daf565b90505b95945050505050565b600061076c8484848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610f7792505050565b156104c25750630291f19360e51b6104c6565b6003546001600160a01b031633146107bf57600354604051632699ee1960e21b81526001600160a01b0390911660048201523360248201526044016106dd565b600354600480546040516320bf56eb60e21b8152918201526000916001600160a01b0316906382fd5bac90602401600060405180830381865afa15801561080a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261083291908101906119e4565b60608101516080820151919250906108556001600160a01b038316333084610f7f565b600354600480546040516331a9108f60e11b8152918201526000916001600160a01b031690636352211e90602401602060405180830381865afa1580156108a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c49190611953565b90506108da6001600160a01b0384168284610fec565b5050505050565b6003546001600160a01b0316331461092157600354604051632699ee1960e21b81526001600160a01b0390911660048201523360248201526044016106dd565b600354600480546040516320bf56eb60e21b8152918201526000916001600160a01b0316906382fd5bac90602401600060405180830381865afa15801561096c573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261099491908101906119e4565b6060810151600354600480546040516335b729b960e11b81529182015292935090916000916001600160a01b031690636b6e537290602401606060405180830381865afa1580156109e9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0d9190611b19565b509150610a2790506001600160a01b038316333084610f7f565b60208301516108da6001600160a01b0384168284610fec565b905090565b6000610a4060015490565b600080546001600160a01b0316604051631aab3f0d60e11b8152306004820152600060248201526001600160a01b0391909116906335567e1a90604401602060405180830381865afa158015610aaa573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a409190611b47565b60006001600160e01b03198216630271189760e51b148061047657506301ffc9a760e01b6001600160e01b0319831614610476565b60006001600160e01b03198216636faff5f160e01b1480610476575061047682611022565b600354600480546040516331a9108f60e11b8152918201526000916001600160a01b0384811692911690636352211e90602401602060405180830381865afa158015610b78573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b9c9190611953565b6001600160a01b031603610bb257506001919050565b816001600160a01b0316610bce6000546001600160a01b031690565b6001600160a01b03160361049a57506001919050565b600354600480546040516331a9108f60e11b815291820152600091829182916001600160a01b031690636352211e90602401602060405180830381865afa158015610c33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c579190611953565b9050806001600160a01b0316826001600160a01b031603610c7d576001925050506104c6565b50600195945050505050565b6001600160a01b038116610cb057604051632039d3c960e01b815260040160405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b03163314610d2c5760405162461bcd60e51b815260206004820152601c60248201527f6163636f756e743a206e6f742066726f6d20456e747279506f696e740000000060448201526064016106dd565b565b80156106e657604051600090339060001990849084818181858888f193505050503d80600081146108da576040519150601f19603f3d011682016040523d82523d6000602084013e6108da565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000006000908152601c829052603c81206104c6565b606060ff8216610e0157610dfa868686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061104d92505050565b9050610721565b60001960ff831601610e4d57610dfa8685858080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506110c692505050565b60011960ff831601610ed757610e998585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061113b92505050565b604051602001610ec1919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040529050610721565b60021960ff831601610f5e576000610ef26020828688611b60565b610efb91611b8a565b9050366000610f0d866020818a611b60565b91509150610f1d88848484611171565b604051602001610f45919060609190911b6bffffffffffffffffffffffff1916815260140190565b6040516020818303038152906040529350505050610721565b604051631cc6a69960e11b815260040160405180910390fd5b600192915050565b6040516001600160a01b038481166024830152838116604483015260648201839052610fe69186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180516001600160e01b0383818316178352505050506111ea565b50505050565b6040516001600160a01b0383811660248301526044820183905261101d91859182169063a9059cbb90606401610fb4565b505050565b600061102d82610ace565b8061047657506001600160e01b03198216635194544760e01b1492915050565b60606000846001600160a01b0316848460405161106a9190611ba8565b60006040518083038185875af1925050503d80600081146110a7576040519150601f19603f3d011682016040523d82523d6000602084013e6110ac565b606091505b5092509050806110be57815160208301fd5b509392505050565b60606000836001600160a01b0316836040516110e29190611ba8565b600060405180830381855af49150503d806000811461111d576040519150601f19603f3d011682016040523d82523d6000602084013e611122565b606091505b50925090508061113457815160208301fd5b5092915050565b805160009082906020820185f091506001600160a01b0382166111345760405163a28c247360e01b815260040160405180910390fd5b60008083838080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525050825192935087929150506020830188f591506001600160a01b0382166111e15760405163a28c247360e01b815260040160405180910390fd5b50949350505050565b60006111ff6001600160a01b0384168361124d565b905080516000141580156112245750808060200190518101906112229190611bc4565b155b1561101d57604051635274afe760e01b81526001600160a01b03841660048201526024016106dd565b60606104c68383600084600080856001600160a01b031684866040516112739190611ba8565b60006040518083038185875af1925050503d80600081146112b0576040519150601f19603f3d011682016040523d82523d6000602084013e6112b5565b606091505b50915091506112c58683836112cf565b9695505050505050565b6060826112e4576112df8261132b565b6104c6565b81511580156112fb57506001600160a01b0384163b155b1561132457604051639996b31560e01b81526001600160a01b03851660048201526024016106dd565b50806104c6565b80511561133b5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b60006020828403121561136657600080fd5b81356001600160e01b0319811681146104c657600080fd5b6001600160a01b03811681146106e657600080fd5b6000602082840312156113a557600080fd5b81356104c68161137e565b634e487b7160e01b600052604160045260246000fd5b6040516101a081016001600160401b03811182821017156113e9576113e96113b0565b60405290565b604051601f8201601f191681016001600160401b0381118282101715611417576114176113b0565b604052919050565b60006001600160401b03821115611438576114386113b0565b50601f01601f191660200190565b600082601f83011261145757600080fd5b813561146a6114658261141f565b6113ef565b81815284602083860101111561147f57600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156114b257600080fd5b84356114bd8161137e565b935060208501356114cd8161137e565b92506040850135915060608501356001600160401b038111156114ef57600080fd5b6114fb87828801611446565b91505092959194509250565b60008083601f84011261151957600080fd5b5081356001600160401b0381111561153057600080fd5b60208301915083602082850101111561154857600080fd5b9250929050565b60008060006040848603121561156457600080fd5b8335925060208401356001600160401b0381111561158157600080fd5b61158d86828701611507565b9497909650939450505050565b6000806000606084860312156115af57600080fd5b83356115ba8161137e565b925060208401356115ca8161137e565b929592945050506040919091013590565b6000806000606084860312156115f057600080fd5b83356001600160401b0381111561160657600080fd5b8401610120818703121561161957600080fd5b95602085013595506040909401359392505050565b6000806040838503121561164157600080fd5b82356001600160401b0381111561165757600080fd5b8301610160818603121561166a57600080fd5b946020939093013593505050565b60006020828403121561168a57600080fd5b81356001600160401b038111156116a057600080fd5b6116ac84828501611446565b949350505050565b6000806000806000608086880312156116cc57600080fd5b85356116d78161137e565b94506020860135935060408601356001600160401b038111156116f957600080fd5b61170588828901611507565b909450925050606086013560ff8116811461171f57600080fd5b809150509295509295909350565b60005b83811015611748578181015183820152602001611730565b50506000910152565b602081526000825180602084015261177081604085016020870161172d565b601f01601f19169190910160400192915050565b60008060006040848603121561179957600080fd5b83356117a48161137e565b925060208401356001600160401b0381111561158157600080fd5b600082601f8301126117d057600080fd5b813560206001600160401b038211156117eb576117eb6113b0565b8160051b6117fa8282016113ef565b928352848101820192828101908785111561181457600080fd5b83870192505b848310156118335782358252918301919083019061181a565b979650505050505050565b600080600080600060a0868803121561185657600080fd5b85356118618161137e565b945060208601356118718161137e565b935060408601356001600160401b038082111561188d57600080fd5b61189989838a016117bf565b945060608801359150808211156118af57600080fd5b6118bb89838a016117bf565b935060808801359150808211156118d157600080fd5b506118de88828901611446565b9150509295509295909350565b600080600080600060a0868803121561190357600080fd5b853561190e8161137e565b9450602086013561191e8161137e565b9350604086013592506060860135915060808601356001600160401b0381111561194757600080fd5b6118de88828901611446565b60006020828403121561196557600080fd5b81516104c68161137e565b805161197b8161137e565b919050565b600082601f83011261199157600080fd5b815161199f6114658261141f565b8181528460208386010111156119b457600080fd5b6116ac82602083016020870161172d565b8051801515811461197b57600080fd5b80516008811061197b57600080fd5b6000602082840312156119f657600080fd5b81516001600160401b0380821115611a0d57600080fd5b908301906101a08286031215611a2257600080fd5b611a2a6113c6565b611a3383611970565b8152611a4160208401611970565b6020820152604083015182811115611a5857600080fd5b611a6487828601611980565b604083015250611a7660608401611970565b60608201526080830151608082015260a083015160a0820152611a9b60c08401611970565b60c082015260e083015160e08201526101009150611aba828401611970565b828201526101209150611ace8284016119c5565b828201526101409150611ae28284016119c5565b828201526101609150611af6828401611970565b828201526101809150611b0a8284016119d5565b91810191909152949350505050565b600080600060608486031215611b2e57600080fd5b8351925060208401519150604084015190509250925092565b600060208284031215611b5957600080fd5b5051919050565b60008085851115611b7057600080fd5b83861115611b7d57600080fd5b5050820193919092039150565b8035602083101561047657600019602084900360031b1b1692915050565b60008251611bba81846020870161172d565b9190910192915050565b600060208284031215611bd657600080fd5b6104c6826119c556fea2646970667358221220be47011ce54ffe346b5ea56170a777e23ce9e8edb255adc9821fdc4258b1695764736f6c63430008180033";

type DegenDealsERC6551AccountConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DegenDealsERC6551AccountConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DegenDealsERC6551Account__factory extends ContractFactory {
  constructor(...args: DegenDealsERC6551AccountConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      DegenDealsERC6551Account & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): DegenDealsERC6551Account__factory {
    return super.connect(runner) as DegenDealsERC6551Account__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DegenDealsERC6551AccountInterface {
    return new Interface(_abi) as DegenDealsERC6551AccountInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): DegenDealsERC6551Account {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as DegenDealsERC6551Account;
  }
}
